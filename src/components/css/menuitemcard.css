/* src/components/css/menuitemcard.css */

h3 {
    font-size: calc(16pt + 0.390625vw);
    border-bottom: 3px solid var(--yellow);
    width: fit-content;
}

@media (min-width: 1024px) {
    .calendar-container, .intro-image, .intro-text {
        flex: 1;
        min-width: calc(33.333% - 1rem);
    }
}

@media (max-width: 1023px) {
    .calendar-container, .intro-image, .intro-text {
        flex-basis: 33%;
        flex-grow: 1;
        flex-shrink: 0;
    }

    .menuItem-card p {
        font-size: calc(12pt + 0.390625vw);
    }

    .catering-hero {
        flex-wrap: wrap !important;
    }

    .calendar-container {
        margin: 0 !important;
    }
}

@media (max-width: 868px) {
    .menuItem-card p {
        font-size: calc(10pt + 0.390625vw);
    }

    .menuItem-card {
        margin-bottom: 50px !important;
    }

    .catering-hero {
        width: 100% !important;
        margin: 0;
        flex-direction: column !important;
        flex-flow: wrap;
    }

    .intro-image {
        width: 100% !important;
        height: 25% !important;
        overflow:hidden;
        margin: 0 !important;
    }

    .intro-text {
        font-size: calc(12pt + 0.390625vw);
        margin: 0;
    }

    .intro-text h1 {
        font-size: calc(26pt + 0.390625vw);
        align-self: center;
    }
}

.catering-hero {
    width: 80%;
    margin: auto;
    height: auto;
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
}

.intro-image {
    width: 50%;
    min-width: 300px;
    height: auto;
    margin: 2rem auto;
}

.intro-text {
    padding: 2rem;
    position: relative;
    display: flex;
    flex-direction: column;
}

.estimate-container {
    padding: 0;
    position: relative;
    display: flex;
    flex-direction: column;
}

.estimate-container h3 {
    padding-left: 0;
}

.textarea{
    width: 13rem;
    border: none;
    background-color: var(--light-grey-solid);
    color: var(--primary-blue);
    font-size: 1.75rem;
    font-family: 'Alegreya Sans', sans-serif;
    font-weight: 600;
    height: 2.5rem;
    padding: 0;
    padding-left: .5rem;
    resize: none;
}

.estimate-elements {
    display: flex;
    flex-direction: row;
    align-items: center;
}

.radiobuttons-container {
    display: flex;
    flex-direction: column;
    padding-left: 1rem;
    align-items: baseline;
}

.calendar-container {
    margin: 5rem auto;
    width: 280px;
    padding: 1rem;
}

.calendar-container h3 {
    padding-left: 0;
}

/*.menuItem-card-container {
    margin: 1rem auto;
    width: 80%;
    min-height: 40vh;
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
}

.menuItem-card {
    padding: 0;
    min-width: 15rem;
    width: 80%;
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
    box-shadow: .1rem 5px 10px rgba(0, 0, 0, .2);
    height: fit-content;
    margin-bottom: 3rem;
}*/

.menuItem-card-container {
    display: grid;
    margin: 2rem auto;
    width: 80%;
    min-height: 40vh;
    grid-auto-flow: dense;
    gap: 1rem;
    grid-template-columns: repeat(auto-fit, minmax(min(100%, 18rem), 1fr));
    grid-auto-rows: 12rem 1rem auto;
    container-type: inline-size;
}

.menuItem-card{
    --_padding: 2rem;

    grid-row: span 3;
    display: grid;
    grid-template-rows: subgrid;
    gap: .8rem;
    background: var(--clr-primary-700);
    overflow: hidden;
    box-shadow: .1rem 5px 10px rgba(0, 0, 0, .2);
}

.title-checkbox-container {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
}

.menuItem-card p {
    padding: 0 .5rem .5rem .5rem;
    margin: 0;
    white-space: pre-line;
}

.menuItem-header {
    margin: .5rem;
    padding: 0;
    flex: 1;
}

.calendar-title {
    margin-left: 2rem;
    border-bottom: 3px solid var(--yellow);
}

.guest-form {
    margin-right: 5rem;
}

.guest-form textarea {
    margin-left: 2rem;
    width: 270px;
    font-size: 1.75rem;
    padding-left: .5rem;
}

.guest-form textarea::placeholder {
    padding: .5rem;
    font-size: 1rem;
}

textarea:focus {
    border: 1px solid var(--light-blue);
    outline: none !important;
}

.menuItem-card h3 {
    color: var(--light-blue);
    font-size: calc(1rem + 0.390625vw);
}

/* -------- Checkbox Customization -------- */

/* Customize the label (the container) */
.checkbox-container {
    display: block;
    position: relative;
    padding-left: 2rem;
    margin-left: auto;
    transform: translateY(-1rem);
    cursor: pointer;
    font-size: 2rem;
    user-select: none;
}

  /* Hide the browser's default checkbox */
.checkbox-container input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
}

  /* Create a custom checkbox */
.tickmark {
    position: absolute;
    top: 0;
    left: 0;
    height: 25px;
    width: 25px;
    background-color: var(--yellow-transparent);
}

  /* On mouse-over, add a grey background color */
.checkbox-container:hover input ~ .tickmark {
    background-color: var(--yellow);
}

  /* When the checkbox is checked, add a blue background */
.checkbox-container input:checked ~ .tickmark {
    background-color: var(--yellow);
}

  /* Create the tickmark/indicator (hidden when not checked) */
.tickmark:after {
    content: "";
    position: absolute;
    display: none;
}

  /* Show the tickmark when checked */
.checkbox-container input:checked ~ .tickmark:after {
    display: block;
}

  /* Style the tickmark/indicator */
.checkbox-container .tickmark:after {
    left: 9px;
    top: 5px;
    width: 5px;
    height: 10px;
    border: solid var(--primary-blue);
    border-width: 0 3px 3px 0;
    -webkit-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
    transform: rotate(45deg);
}

/* -------- Radio Button Customization -------- */

  /* Customize the label (the container) */
.radio-buttons {
    display: block;
    position: relative;
    padding-left: 2rem;
    margin: .5rem;
    cursor: pointer;
    user-select: none;
    font-size: 1rem;
}

  /* Hide the browser's default radio button */
.radio-buttons input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
}

  /* Create a custom radio button */
.checkmark {
    position: absolute;
    top: 0;
    left: 0;
    height: 25px;
    width: 25px;
    background-color: var(--yellow-transparent);
    border-radius: 50%;
}

  /* On mouse-over, add a grey background color */
.radio-buttons:hover input ~ .checkmark {
    background-color: var(--yellow);
}

  /* When the radio button is checked, add a blue background */
.radio-buttons input:checked ~ .checkmark {
    background-color: var(--yellow);
}

  /* Create the indicator (the dot/circle - hidden when not checked) */
.checkmark:after {
    content: "";
    position: absolute;
    display: none;
}

  /* Show the indicator (dot/circle) when checked */
.radio-buttons input:checked ~ .checkmark:after {
    display: block;
}

  /* Style the indicator (dot/circle) */
.radio-buttons .checkmark:after {
    top: 7px;
    left: 8px;
    width: 10px;
    height: 10px;
    border-radius: 50%;
    background: var(--primary-blue);
}
